name: Go Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
    - name: Build
      run: |
        if [ "${{ matrix.goos }}" = "windows" ]; then
          OUTPUT_NAME=horcrux-${{ matrix.goos }}-${{ matrix.goarch }}.exe
        else
          OUTPUT_NAME=horcrux-${{ matrix.goos }}-${{ matrix.goarch }}
        fi
        go build -v -o $OUTPUT_NAME ./...
    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.goos }}-${{ matrix.goarch }}
        path: $OUTPUT_NAME

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v3
    - name: Download all artifacts
      uses: actions/download-artifact@v2
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./linux-amd64/horcrux-linux-amd64
        asset_name: horcrux-linux-amd64
        asset_content_type: application/octet-stream
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./windows-amd64/horcrux-windows-amd64.exe
        asset_name: horcrux-windows-amd64.exe
        asset_content_type: application/octet-stream
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./darwin-amd64/horcrux-darwin-amd64
        asset_name: horcrux-darwin-amd64
        asset_content_type: application/octet-stream
